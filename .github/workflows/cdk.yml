# This workflow contains a job for CDK synth and deploy, running inside a custom Docker image from ECR.

name: CDK

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      rest_docker_tag:
        description: 'Docker image tag for REST service'
        required: false
        default: 'latest'
      lambda_docker_tag:
        description: 'Docker image tag for Lambda service'
        required: false
        default: 'latest'

jobs:
  cdk-deploy:
    name: CDK Synth and Deploy
    runs-on: ubuntu-latest
    # If your ECR image is private, you must set up OIDC or another authentication method for GitHub Actions to pull it
    container:
      image: 472765722896.dkr.ecr.us-east-1.amazonaws.com/cdk-docker:latest
    env:
      REST_DOCKER_TAG: ${{ github.event.inputs.rest_docker_tag || 'latest' }}
      LAMBDA_DOCKER_TAG: ${{ github.event.inputs.lambda_docker_tag || 'latest' }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install CDK dependencies
        run: |
          cd scripts
          poetry install
      - name: CDK Synth
        run: |
          poetry run python ../scripts/build_cdk.py
      - name: Set Docker tags and deploy CDK
        env:
          REST_DOCKER_TAG: ${{ github.sha }}
          LAMBDA_DOCKER_TAG: ${{ github.run_number }}
        run: |
          poetry run cdk deploy --no-version-reporting -a cdk.out/assembly-Devops-RestApp -e --all --require-approval never